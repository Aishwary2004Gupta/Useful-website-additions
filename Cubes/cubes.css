:root{
  --cube-face-border: 2px dashed #5227FF;
  --cube-face-bg: #1a1a2e;
  --ripple-color: #ff6b6b;
  --perspective: 1200px;
  --grid-size: 8;
  --cell-gap: 5%;
  --cube-depth: 3.5vmin;
}

*{box-sizing:border-box;margin:0;padding:0}
body{min-height:100vh;display:flex;align-items:center;justify-content:center;background:#111}

#scene{
  width:60vmin; aspect-ratio:1/1;
  display:grid;
  grid-template-columns:repeat(var(--grid-size),1fr);
  grid-template-rows:repeat(var(--grid-size),1fr);
  gap:var(--cell-gap);
  perspective:var(--perspective);
}

/* ===== 2-D state ===== */
.cube{
  position:relative;
  width:100%; height:100%;
  transform-style:flat;
  transition:transform 1.2s cubic-bezier(.25,.8,.25,1),   /* 1.2 s 复位 */
              transform-style .6s;
}
.cube-face{
  position:absolute; inset:0;
  background:var(--cube-face-bg);
  border:var(--cube-face-border);
  transition:background .3s, transform .3s;
}
.cube-face:not(.cube-face--front){display:none;}

/* ===== 3-D state ===== */
.cube.is-3d{
  transform-style:preserve-3d;
}
.cube.is-3d .cube-face{display:block;}
.cube.is-3d .cube-face--front  {transform:rotateY(  0deg) translateZ(calc(var(--cube-depth) * 0.5));}
.cube.is-3d .cube-face--back   {transform:rotateY(180deg) translateZ(calc(var(--cube-depth) * 0.5));}
.cube.is-3d .cube-face--left   {transform:rotateY(-90deg) translateZ(calc(var(--cube-depth) * 0.5));}
.cube.is-3d .cube-face--right  {transform:rotateY( 90deg) translateZ(calc(var(--cube-depth) * 0.5));}
.cube.is-3d .cube-face--top    {transform:rotateX( 90deg) translateZ(calc(var(--cube-depth) * 0.5));}
.cube.is-3d .cube-face--bottom {transform:rotateX(-90deg) translateZ(calc(var(--cube-depth) * 0.5));}

@media(max-width:768px){ #scene{width:90vw} }